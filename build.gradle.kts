/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    `java-library`
    `maven-publish`
}

repositories {
    mavenLocal()
    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
}

dependencies {
    api("org.springframework.boot:spring-boot-starter-web:3.0.6")
    api("org.mariadb.jdbc:mariadb-java-client:3.1.4")
    api("org.jetbrains:annotations:24.0.1")
    api("org.springframework.boot:spring-boot-starter-validation:3.0.6")
    api("org.springframework.boot:spring-boot-starter-data-jpa:3.0.6")
    api("org.projectlombok:lombok:1.18.26")
    api("org.springframework.boot:spring-boot-starter-security:3.0.6")
    api("org.springframework.boot:spring-boot-configuration-processor:3.0.6")
    api("org.springframework.security:spring-security-config:6.0.3")
    api("org.springframework.security:spring-security-oauth2-client:6.0.3")
    api("org.springframework.security:spring-security-oauth2-jose:6.0.3")
    api("org.springframework.security:spring-security-oauth2-resource-server:6.0.3")
    api("org.springframework.security:spring-security-oauth2-core:6.0.3")
    api("org.springframework.security:spring-security-test:6.0.3")
    api("io.jsonwebtoken:jjwt-api:0.11.5")
    api("io.jsonwebtoken:jjwt-impl:0.11.5")
    api("io.jsonwebtoken:jjwt-jackson:0.11.5")
    api("org.springframework.boot:spring-boot-starter-actuator:3.0.6")
    runtimeOnly("io.micrometer:micrometer-registry-prometheus:1.10.6")
    testImplementation("org.mockito:mockito-core:5.3.1")
    testImplementation("org.springframework.boot:spring-boot-starter-test:3.0.6")
    testImplementation("junit:junit:4.13.2")
    compileOnly("org.projectlombok:lombok:1.18.26")
    annotationProcessor("org.projectlombok:lombok:1.18.26")
}

group = "de.ghse"
version = "0.0.1-SNAPSHOT"
description = "Forum"
java.sourceCompatibility = JavaVersion.VERSION_17

publishing {
    publications.create<MavenPublication>("maven") {
        from(components["java"])
    }
}

tasks.withType<JavaCompile>() {
    options.encoding = "UTF-8"
}

tasks.withType<Javadoc>() {
    options.encoding = "UTF-8"
}

tasks.withType<Test> {
    useJUnitPlatform()
}
